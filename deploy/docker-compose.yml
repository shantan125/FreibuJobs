version: "3.8"

services:
  linkedin-bot:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: linkedin-bot
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - LINKEDIN_EMAIL=${LINKEDIN_EMAIL}
      - LINKEDIN_PASSWORD=${LINKEDIN_PASSWORD}
    volumes:
      - ../logs:/app/logs
      - ../data:/app/data
    networks:
      - linkedin-bot-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 512M
          cpus: "0.25"
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Redis for caching (if needed in future)
  redis:
    image: redis:7-alpine
    container_name: linkedin-bot-redis
    restart: unless-stopped
    networks:
      - linkedin-bot-network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.1"

  # Optional: Monitoring with Prometheus (basic setup)
  prometheus:
    image: prom/prometheus:latest
    container_name: linkedin-bot-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - linkedin-bot-network
    profiles:
      - monitoring

networks:
  linkedin-bot-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
