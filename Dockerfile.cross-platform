# Multi-stage build for cross-platform compatibility
FROM python:3.11-slim as base

# Set environment variables for cross-platform compatibility
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    CHROME_BIN=/usr/bin/google-chrome-stable \
    DISPLAY=:99

# Install system dependencies including Chrome
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    unzip \
    gnupg2 \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Add Google's signing key and repository
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list

# Install Google Chrome
RUN apt-get update && apt-get install -y \
    google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# Verify Chrome installation and version
RUN google-chrome-stable --version

# Create non-root user for security
RUN groupadd -r botuser && useradd -r -g botuser -d /home/botuser -s /bin/bash -c "Bot User" botuser \
    && mkdir -p /home/botuser \
    && chown -R botuser:botuser /home/botuser

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Change ownership of app directory
RUN chown -R botuser:botuser /app

# Switch to non-root user
USER botuser

# Create Chrome data directory
RUN mkdir -p /home/botuser/.config/google-chrome

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose health check port
EXPOSE 8080

# Set environment variables for production
ENV PYTHONPATH=/app \
    AZURE_ENVIRONMENT=true \
    ENABLE_HEALTH_CHECK=true \
    HEALTH_CHECK_PORT=8080

# Run the application
CMD ["python", "-m", "src.main"]
