{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerAppName": {
      "type": "string",
      "defaultValue": "linkedin-bot-app",
      "metadata": {
        "description": "Name of the container app"
      }
    },
    "containerAppEnvironmentName": {
      "type": "string",
      "defaultValue": "linkedin-bot-env",
      "metadata": {
        "description": "Name of the container app environment"
      }
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": "linkedinbotacr",
      "metadata": {
        "description": "Name of the Azure Container Registry"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "linkedin-bot-kv",
      "metadata": {
        "description": "Name of the Azure Key Vault"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "telegramBotToken": {
      "type": "securestring",
      "metadata": {
        "description": "Telegram bot token"
      }
    }
  },
  "variables": {
    "containerImageName": "[concat(parameters('containerRegistryName'), '.azurecr.io/linkedin-bot:latest')]"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2021-09-01",
      "name": "[parameters('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": false
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-10-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[tenant().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-10-01",
      "name": "[concat(parameters('keyVaultName'), '/telegram-bot-token')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('telegramBotToken')]"
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2022-03-01",
      "name": "[parameters('containerAppEnvironmentName')]",
      "location": "[parameters('location')]",
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics"
        }
      }
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-03-01",
      "name": "[parameters('containerAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvironmentName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), 'telegram-bot-token')]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvironmentName'))]",
        "configuration": {
          "activeRevisionsMode": "Single",
          "ingress": {
            "external": true,
            "targetPort": 8080,
            "allowInsecure": false,
            "traffic": [
              {
                "weight": 100,
                "latestRevision": true
              }
            ]
          },
          "secrets": [
            {
              "name": "telegram-bot-token",
              "keyVaultUrl": "[concat('https://', parameters('keyVaultName'), '.vault.azure.net/secrets/telegram-bot-token')]",
              "identity": "system"
            }
          ],
          "registries": [
            {
              "server": "[concat(parameters('containerRegistryName'), '.azurecr.io')]",
              "identity": "system"
            }
          ]
        },
        "template": {
          "containers": [
            {
              "name": "linkedin-bot",
              "image": "[variables('containerImageName')]",
              "env": [
                {
                  "name": "TELEGRAM_BOT_TOKEN",
                  "secretRef": "telegram-bot-token"
                },
                {
                  "name": "AZURE_ENVIRONMENT",
                  "value": "production"
                },
                {
                  "name": "LOG_LEVEL",
                  "value": "INFO"
                },
                {
                  "name": "ENABLE_METRICS",
                  "value": "true"
                },
                {
                  "name": "HEALTH_CHECK_ENABLED",
                  "value": "true"
                }
              ],
              "resources": {
                "cpu": 0.5,
                "memory": "1Gi"
              },
              "probes": [
                {
                  "type": "Liveness",
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  },
                  "initialDelaySeconds": 30,
                  "periodSeconds": 30
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 0,
            "maxReplicas": 3,
            "rules": [
              {
                "name": "http-scaling",
                "http": {
                  "metadata": {
                    "concurrentRequests": "10"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "containerAppFQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName'))).configuration.ingress.fqdn]"
    },
    "containerRegistryLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))).loginServer]"
    }
  }
}
