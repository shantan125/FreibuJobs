[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "linkedin-job-bot"
version = "1.0.0"
description = "Professional LinkedIn Job & Internship Bot with Telegram Integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "LinkedIn Bot Team", email = "your-email@example.com"}
]
maintainers = [
    {name = "LinkedIn Bot Team", email = "your-email@example.com"}
]
keywords = [
    "linkedin", "job-search", "telegram-bot", "automation", 
    "azure", "container-apps", "selenium", "python-telegram-bot"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Communications :: Chat",
    "Topic :: Office/Business :: News/Diary",
]
requires-python = ">=3.10"
dependencies = [
    "python-telegram-bot>=20.0",
    "selenium>=4.0.0",
    "webdriver-manager>=3.8.0",
    "aiohttp>=3.8.0",
    "python-dotenv>=0.19.0",
    "requests>=2.28.0",
    "beautifulsoup4>=4.11.0",
    "lxml>=4.9.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "pytest-xdist>=3.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]
azure = [
    "azure-identity>=1.12.0",
    "azure-mgmt-containerinstance>=10.0.0",
    "azure-storage-blob>=12.14.0",
]
monitoring = [
    "prometheus-client>=0.16.0",
    "structlog>=22.0.0",
    "sentry-sdk>=1.15.0",
]

[project.urls]
Homepage = "https://github.com/shantan125/frebujob"
Repository = "https://github.com/shantan125/frebujob"
Issues = "https://github.com/shantan125/frebujob/issues"
Documentation = "https://github.com/shantan125/frebujob/blob/main/README.md"

[project.scripts]
linkedin-bot = "main:main"

# =====================================
# Black Configuration
# =====================================
[tool.black]
line-length = 100
target-version = ['py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

# =====================================
# isort Configuration
# =====================================
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["src", "tests"]
known_third_party = [
    "telegram", "selenium", "aiohttp", "requests", 
    "beautifulsoup4", "lxml", "psutil", "pytest"
]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# =====================================
# Flake8 Configuration
# =====================================
[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
    "E501",  # line too long (handled by black)
]
max-complexity = 10
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
]
per-file-ignores = [
    "__init__.py:F401",  # imported but unused
    "tests/*:S101",      # use of assert
]

# =====================================
# mypy Configuration
# =====================================
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "selenium.*",
    "webdriver_manager.*",
    "telegram.*",
    "psutil.*",
]
ignore_missing_imports = true

# =====================================
# pytest Configuration
# =====================================
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
pythonpath = [".", "src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "selenium: marks tests that require selenium/chrome",
    "telegram: marks tests that require telegram bot token",
    "azure: marks tests that require azure credentials",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# =====================================
# Coverage Configuration
# =====================================
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = true

[tool.coverage.html]
directory = "htmlcov"

# =====================================
# Bandit Security Configuration
# =====================================
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

# =====================================
# setuptools Configuration
# =====================================
[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json"]
